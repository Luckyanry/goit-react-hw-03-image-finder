{"version":3,"sources":["components/Searchbar/Searchbar.js","services/pixabayApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Modal/Modal.js","components/App/App.js","index.js"],"names":["Searchbar","query","addQuery","getImages","className","onSubmit","data-action","type","autoComplete","autoFocus","placeholder","name","value","onChange","createGalleryUrl","currentPage","perPage","withCredentials","url","process","request","method","a","body","axios","result","data","ImageGalleryItem","webformatURL","largeImageURL","tags","showModal","onClick","src","alt","Button","requestOnBtn","ImageGallery","gallery","loadImages","map","item","key","id","length","Spinner","color","height","width","timeout","Modal","handleKeyDown","e","code","props","onClose","handleClickOnOverlay","target","nodeName","window","addEventListener","this","removeEventListener","Component","App","state","loader","error","message","refreshSearchQuery","URL","loaderToggle","errorToggle","preventDefault","constructor","setState","hits","scrollPage","prev","status","toggleModal","crossAxis","document","documentElement","offsetHeight","setTimeout","scrollTo","top","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c4f37fc8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Searchbar.css\";\n\nconst Searchbar = ({ query, addQuery, getImages }) => {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={getImages} data-action=\"search\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          name=\"query\"\n          value={query}\n          onChange={addQuery}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import axios from \"axios\";\n\nexport const createGalleryUrl = (query, currentPage, perPage = 12) => {\n  return withCredentials(\n    `https://pixabay.com/api/?q=${query}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=${perPage}&`\n  );\n};\n\nexport const withCredentials = (url) => {\n  return `${url}key=${process.env.REACT_APP_KEY}`;\n};\n\nexport const request = async (method, url, body = null) => {\n  const result = await axios[method](url, body);\n  return result.data;\n};\n","import React from \"react\";\nimport \"./ImageGalleryItem.css\";\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, tags, showModal }) => {\n  return (\n    <li\n      className=\"ImageGalleryItem\"\n      onClick={() => {\n        showModal(largeImageURL, tags);\n      }}\n    >\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({ requestOnBtn }) => {\n  return (\n    <div className=\"LoadeMoreBtn\">\n      <button\n        className=\"Button\"\n        type=\"button\"\n        onClick={requestOnBtn}\n        data-action=\"loadMore\"\n      >\n        Load more\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./ImageGallery.css\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport Button from \"../Button/Button\";\n\nconst ImageGallery = ({ gallery, showModal, loadImages }) => {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {gallery.map((item) => (\n          <ImageGalleryItem key={item.id} {...item} showModal={showModal} />\n        ))}\n      </ul>\n      {gallery.length > 0 && <Button requestOnBtn={loadImages} />}\n    </>\n  );\n};\n\nexport default ImageGallery;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./Loader.css\";\n\nconst Spinner = () => {\n  return (\n    <Loader\n      className=\"Loader\"\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport \"./Modal.css\";\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    e.code === \"Escape\" && this.props.onClose();\n  };\n\n  handleClickOnOverlay = (e) => {\n    e.target.nodeName === \"DIV\" && this.props.onClose();\n  };\n\n  render() {\n    const { largeImageURL, tags } = this.props;\n    return (\n      <div className=\"Overlay\" onClick={this.handleClickOnOverlay}>\n        <div className=\"Modal\">\n          <img src={largeImageURL} alt={tags} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport { request, createGalleryUrl } from \"../../services/pixabayApi\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Spinner from \"../Loader/Loader\";\nimport Modal from \"../Modal/Modal\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    gallery: [],\n    query: \"\",\n    loader: false,\n    error: false,\n    message: \"\",\n    currentPage: 1,\n    perPage: 12,\n    showModal: false,\n    tags: \"\",\n    largeImageURL: \"\",\n  };\n\n  refreshSearchQuery = async (...rest) => {\n    const URL = createGalleryUrl(...rest);\n\n    try {\n      this.loaderToggle(true);\n      const result = await request(\"get\", URL);\n      this.errorToggle(false);\n      return result;\n    } catch (error) {\n      this.errorToggle(true);\n      const message = error.message;\n      return message;\n    } finally {\n      this.loaderToggle(false);\n    }\n  };\n\n  getImages = async (e) => {\n    e.preventDefault();\n    const { query } = this.state;\n    const result = await this.refreshSearchQuery(query);\n\n    if (result.constructor.name !== \"String\") {\n      this.setState({\n        gallery: [...result.hits],\n        currentPage: 2,\n      });\n    } else {\n      this.setState({\n        message: result,\n      });\n    }\n  };\n\n  loadImages = async () => {\n    const { query, currentPage, perPage } = this.state;\n    const result = await this.refreshSearchQuery(query, currentPage, perPage);\n    this.scrollPage();\n\n    if (result.constructor.name !== \"String\") {\n      this.setState((prev) => ({\n        gallery: [...prev.gallery, ...result.hits],\n        currentPage: prev.currentPage + 1,\n      }));\n    } else {\n      this.setState({\n        message: result,\n      });\n    }\n  };\n\n  addQuery = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  loaderToggle = (status) => {\n    this.setState({\n      loader: status,\n    });\n  };\n\n  errorToggle = (status) => {\n    this.setState({\n      error: status,\n    });\n  };\n\n  toggleModal = (largeImageURL, tags) => {\n    this.setState((state) => ({\n      showModal: !state.showModal,\n      largeImageURL,\n      tags,\n    }));\n  };\n\n  scrollPage = () => {\n    const crossAxis = document.documentElement.offsetHeight - 150;\n\n    setTimeout(() => {\n      window.scrollTo({\n        top: crossAxis,\n        behavior: \"smooth\",\n      });\n    }, 100);\n  };\n\n  render() {\n    const {\n      loader,\n      error,\n      message,\n      showModal,\n      gallery,\n      query,\n      largeImageURL,\n      tags,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar\n          addQuery={this.addQuery}\n          query={query}\n          getImages={this.getImages}\n          // getImages={this.getResult}\n        />\n\n        {loader ? (\n          <Spinner />\n        ) : (\n          <ImageGallery\n            gallery={gallery}\n            loadImages={this.loadImages}\n            // loadImages={this.getResult}\n            showModal={this.toggleModal}\n          />\n        )}\n        {error && (\n          <h2 className=\"error\">Whoops, something went wrong: {message}</h2>\n        )}\n        {showModal && (\n          <Modal\n            onClose={this.toggleModal}\n            largeImageURL={largeImageURL}\n            tags={tags}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// getResult = async (e) => {\n//   e.preventDefault();\n//   e.persist();\n//   const { query, currentPage, perPage } = this.state;\n\n//   const result = e.target.dataset.action\n//     ? await this.refreshSearchQuery(query, currentPage, perPage)\n//     : await this.refreshSearchQuery(query);\n\n//   if (result.constructor.name !== \"String\") {\n//     this.scrolling();\n//     e.target.dataset.action\n//       ? this.setState((prev) => ({\n//           gallery: [...prev.gallery, ...result.hits],\n//           currentPage: prev.currentPage + 1,\n//         }))\n//       : this.setState({\n//           gallery: [...result.hits],\n//           currentPage: 2,\n//         });\n//   } else {\n//     this.setState({\n//       message: result,\n//     });\n//   }\n// };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}